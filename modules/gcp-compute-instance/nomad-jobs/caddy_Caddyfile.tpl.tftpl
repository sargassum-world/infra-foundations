{
	email "${acme_email}"
}

# Service Nomad

nomad.s.${device_subname}.d.${infra_domain} {
	reverse_proxy localhost:4646
}

{{- $isOrchestrator := eq (env "meta.nomad_role") "orchestrator" -}}
{{- if $isOrchestrator}}

nomad.s.${infra_domain} {
	reverse_proxy localhost:4646
}
{{- end -}}
{{- if $isOrchestrator }}

nomad.s.${zerotier_network_domain} {
	reverse_proxy localhost:4646

	tls "/secrets/ztoverlay.crt" "/secrets/ztoverlay.key"
}
{{- end }}

nomad.s.${device_subname}.d.${zerotier_network_domain} {
	reverse_proxy localhost:4646

	tls "/secrets/ztoverlay.crt" "/secrets/ztoverlay.key"
}

{{- $enableFilterMatch := "caddy.enable=true" -}}
{{- $publicFilterMatch := "caddy.reverse_proxy.public=true" -}}
{{- $customHostsFilterMatch := "caddy.reverse_proxy.custom_hosts=true" -}}
{{- $customHostFilterPattern := `caddy\.reverse_proxy\.host=(.*)` -}}
{{- range $serviceInfo := nomadServices -}}
	{{- if $serviceInfo.Tags | contains $enableFilterMatch }}

# Service {{ $serviceInfo.Name -}}
		{{- if $serviceInfo.Tags | contains $publicFilterMatch -}}

			{{- /* e.g. custom-service-name.sargassum.world */ -}}
			{{- if $serviceInfo.Tags | contains $customHostsFilterMatch -}}
				{{- range $tag := $serviceInfo.Tags -}}
					{{- if $tag | regexMatch $customHostFilterPattern -}}
						{{- range $service := nomadService $serviceInfo.Name -}}
							{{- if eq (env "attr.unique.network.ip-address") $service.Address }}

{{ $tag | regexReplaceAll $customHostFilterPattern "$1" }} {
	reverse_proxy {{ $service.Address }}:{{ $service.Port }}
}
							{{- end -}}
						{{- end -}}
					{{- end -}}
				{{- end -}}
			{{- end -}}

			{{- /* e.g. service-name.s.sargassum.world */ -}}
			{{- range $service := nomadService $serviceInfo.Name }}

{{ $service.Name | toLower }}.s.${root_domain} {
	reverse_proxy {{ $service.Address }}:{{ $service.Port }}
}
			{{- end -}}

		{{- end -}}

		{{- /* e.g. service-name.s.foundations.infra.sargassum.world */ -}}
		{{- range $service := nomadService $serviceInfo.Name }}

{{ $service.Name | toLower }}.s.${zerotier_network_domain} {
	reverse_proxy {{ $service.Address }}:{{ $service.Port }}

	tls "/secrets/ztoverlay.crt" "/secrets/ztoverlay.key"
}
		{{- end -}}
	{{- end -}}
{{- end }}
